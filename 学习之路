#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>
#include <string.h>




int main()
{
	int n = 1;
	int m = 2;
	switch (n)
	{
	case 1:m++;
	case 2:n++;
	case 3:
		switch (n)
		{
		case 1:n++;
		case 2:m++;
			n++;
			break;
		}
	case 4:m++;
		break;
	}
	printf("m=%d\nn=%d\n", m,n);
	return 0;
}




int main()
{
	int i = 1;
	while (i <= 100)
	{
		printf("%d  ", i);
		i += 4;//每次加4 等价于i=i+4
	}
	return 0;
}


{
	int i = 0;
	while (i <= 100)
	{
		if (i % 2 == 1)
			printf("%d  ", i);
			i++;
	}
	return 0;
}




int main()//选择结构
{
	int age = 0;
	printf("请输入你的年龄：\n");
	scanf_s("%d", &age);
	if (age < 18)
		{	printf("未成年\n");
          printf("不能打游戏\n");//代码块
		}
	else
	{
		if (age >= 18 && age < 28)
		printf("青年\n");
		else if (age >= 28 && age < 50)
		printf("壮年\n");
		else if (age >= 50 && age < 90)
		printf("老年\n");
		else
		printf("暮年\n");
	}
	/*else if (age >= 18 && age < 28)
		printf("青年\n");
	else if (age >= 28 && age < 50)
		printf("壮年\n");
	else if (age >= 50 && age < 90)
		printf("老年\n");
	else
		printf("暮年\n");*/
	return 0;

}






int main()
{
	printf("helli world");
	return 0;
}



struct Book
{
	char name[20];
	short price;
};//要加分号
int main()
{
	struct Book b1 = { "c语言程序设计",55 };
	struct Book* pb = &b1;//利用pb指针函数打印书名和价格
	printf("%s\n", (*pb).name);
	printf("%d\n", (*pb).price);
	/*printf("书名:%s\n", b1.name);
	printf("价格:%d元\n", b1.price);
	b1.price = 15;
	printf("修改后的价格:%d元\n", b1.price);*/
	return 0;
}
//复杂对象--结构体-自己创建出来的一种类型
//创建一个结构体类型






int main()
{
	printf("*****************\n\n");
	printf("   hello world\n\n");
	printf("*****************\n");
	return 0;
}





int main()
{
	int a, b, c, max1, max2 = 0;
	scanf("%d%d%d", &a, &b, &c);
	max1 = (a > b ? a : b);
	max2 = (max1 > c ? max2 : c);
	printf("%d\n", max2);
	return 0;
}




int main()
{
	double d = 3.14;
	double* pd = &d;
	pd = 5.5;
	printf("%lf\n", d);
	printf("%lf\n", *pd);
	printf("%d\n", sizeof(pd));
	return 0;
}






int main()
{
	int a = 0;
	int b = 0;
	int c = 0;
	int max1 = 0;
	int max2 = 0;
	scanf("%d%d%d", &a,&b,&c);
	max1 = (a > b ? a : b);
	max2 = (max1 > c ? max2 : c);
	printf("%d\n", max2);
	return 0;
}





struct Book
{
	char name[20];//name是数组名，本质上是一个地址
	short price;
	char writter[20];
};

int main()//改书名
{
	struct Book b1 = { "c语言程序设计",55,"艾克里"};
	//对这本书内容的定义或则说赋值是与上面的顺序一致对应的
	strcpy(b1.name, "C++");//strcpy-string copy-字符串拷贝
	printf("%s\n", b1.name);
	printf("%s\n", b1.writter);
}




int main()
{
	struct Book b1 = { "c语言程序设计",55 };
	struct Book* pb = &b1;
	printf("书名:%s\n", b1.name);
	printf("价格:%d\n", b1.price);
	b1.price = 15;
	printf("修改后的价格价格:%d\n", b1.price);
	printf("%s\n", (*pb).name);
	printf("%s\n", pb->name);//打印结构体的成员
	printf("%d\n", pb->price);
	printf("%d\n", *pb);//打印地址
	//. 结构体变量.成员
	//->结构体指针->成员
	return 0;
}




//int main()
//{
//	struct Book b1 = { "c语言程序设计",55 };
//	struct Book* pb = &b1;
//	printf("%s\n", pb->name);
//	printf("%d\n", pb->price);
//	return 0;
//	
//}




//int main()
//{
//	int a[] = { 1,2,3,4 };
//	int* b = a;
//	*b += 2;
//	b++;
//	printf("%d,%d\n", *b, *(b + 2));
//}






//int main()
//{
//	int a, b, c, d, e = 0;
//	scanf("%d%d%d", &a, &b, &c);
//	d = (a > b ? a : b);
//	e = (e > c ? e : c);
//	printf("%d\n", e);
//	return 0;
//}
