//第一种在数组中定义一个max变量进行一次次比较交换

int main()//求十个整数的最大值
{
	
	int arr[] = {-1,-2,3,4,6,7,190,9};
	int max = arr[0];
	int i = 0;
	int sz = sizeof(arr) / sizeof(arr[0]);
	for (i = 0; i <= sz; i++)
	{
		if (arr[i] >= max)
			max = arr[i];
	}
	printf ("%d\n",max );
	return 0;
}


//第二种冒泡排序

void main()//冒泡排序
{
	int n[10] = { 25,35,68,79,21,13,98,7,16,62 };//定义一个大小为10的数组
	int i, j, temp;
	for (i = 1; i <= 9; i++)//外层循环是比较的轮数，数组内有10个数，那么就应该比较10-1=9轮
	{
		for (j = 0; j <= 9 - i; j++)//内层循环比较的是当前一轮的比较次数，例如：第一轮比较9-1=8次，第二轮比较9-2=7次
		{
			if (n[j] > n[j + 1])//相邻两个数如果逆序，则交换位置
			{
				temp = n[j];
				n[j] = n[j + 1];
				n[j + 1] = temp;
			}
		}
	}
	printf("排序过后的数顺序:\n");
	for (i = 0; i < 10; i++)
		printf("%-4d", n[i]);
	printf("\n");
}



//冒泡排序进阶版用于展示排序过程
void main()//展示过程的冒泡排序
{
	int n[10] = { 25,35,68,79,21,13,98,7,16,62 };//定义一个大小为10的数组
	int i, j, k, temp;
	for (i = 1; i <= 9; i++)//外层循环是比较的轮数，数组内有10个数，那么就应该比较10-1=9轮
	{
		for (j = 0; j <= 9 - i; j++)//内层循环比较的是当前一轮的比较次数，例如：第一轮比较9-1=8次，第二轮比较9-2=7次
		{
			if (n[j] > n[j + 1])//相邻两个数如果逆序，则交换位置
			{
				temp = n[j];
				n[j] = n[j + 1];
				n[j + 1] = temp;
			}
		}
		printf("第%d趟排序完成后的数据排序:\n", i);
		for (k = 0; k < 10; k++)
			printf("%-4d", n[i]);
		printf("\n");
	}
	printf("排序过后的数顺序:\n");
	for (i = 0; i < 10; i++)
		printf("%-4d", n[i]);
	printf("\n");
}
